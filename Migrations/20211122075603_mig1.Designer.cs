// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LimitLessLegal.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20211122075603_mig1")]
    partial class mig1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ADAF_Branches", b =>
                {
                    b.Property<int>("branch_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("branch_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("cause_disable")
                        .HasColumnType("bit");

                    b.Property<int>("creation_user")
                        .HasColumnType("int");

                    b.Property<int>("last_update_user")
                        .HasColumnType("int");

                    b.HasKey("branch_id");

                    b.ToTable("ADAF_Branchess");
                });

            modelBuilder.Entity("ADAF_Cars", b =>
                {
                    b.Property<int>("car_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("car_board")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("car_brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("car_chassis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("car_motor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("creation_user")
                        .HasColumnType("int");

                    b.Property<string>("driver_insurance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("last_update_user")
                        .HasColumnType("int");

                    b.Property<DateTime>("license_end_date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("license_examination_date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("license_start_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("licenseimg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("person_used")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("trafiic_name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("car_id");

                    b.ToTable("ADAF_Carss");
                });

            modelBuilder.Entity("ADAF_District_license", b =>
                {
                    b.Property<int>("district_license_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("branch_id")
                        .HasColumnType("int");

                    b.Property<int>("creation_user")
                        .HasColumnType("int");

                    b.Property<string>("district_img")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("district_license_type_id")
                        .HasColumnType("int");

                    b.Property<int?>("district_license_types_id")
                        .HasColumnType("int");

                    b.Property<string>("district_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("last_update_user")
                        .HasColumnType("int");

                    b.Property<DateTime>("license_end")
                        .HasColumnType("datetime2");

                    b.Property<string>("license_notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("license_start")
                        .HasColumnType("datetime2");

                    b.HasKey("district_license_id");

                    b.HasIndex("branch_id");

                    b.HasIndex("district_license_types_id");

                    b.ToTable("ADAF_District_licenses");
                });

            modelBuilder.Entity("ADAF_District_license_types", b =>
                {
                    b.Property<int>("district_license_types_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("cause_disable")
                        .HasColumnType("bit");

                    b.Property<int>("creation_user")
                        .HasColumnType("int");

                    b.Property<string>("district_license_types_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("last_update_user")
                        .HasColumnType("int");

                    b.HasKey("district_license_types_id");

                    b.ToTable("ADAF_District_license_typess");
                });

            modelBuilder.Entity("Branchleave", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Company_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("License_number_Manager")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name_responsible_manager")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("branch")
                        .HasColumnType("int");

                    b.Property<int?>("branch_idا")
                        .HasColumnType("int");

                    b.Property<string>("card_manager_img")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("card_owner_img")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("creation_user")
                        .HasColumnType("int");

                    b.Property<DateTime>("date_being_hired")
                        .HasColumnType("datetime2");

                    b.Property<int>("last_update_user")
                        .HasColumnType("int");

                    b.Property<string>("license_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("license_number_owner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("medical_district")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name_licens_holder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nationaid_manager_img")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nationaid_owner_img")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("branch_idا");

                    b.ToTable("branchleaves");
                });

            modelBuilder.Entity("Calender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("End_Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Start_Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Calender");
                });

            modelBuilder.Entity("Central", b =>
                {
                    b.Property<int>("ID_central")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AffiliateCentral")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorrectTheSituation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FromCts")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InternetBillValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandlineNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandlineNumber1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Subscriptiondate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Thebunch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToCts")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("branch_id")
                        .HasColumnType("int");

                    b.Property<int>("creation_user")
                        .HasColumnType("int");

                    b.Property<int>("last_update_user")
                        .HasColumnType("int");

                    b.HasKey("ID_central");

                    b.HasIndex("branch_id");

                    b.ToTable("Central");
                });

            modelBuilder.Entity("Department", b =>
                {
                    b.Property<int>("ID_Department")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_Department");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("Jop", b =>
                {
                    b.Property<int>("ID_jop")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_jop");

                    b.ToTable("Jop");
                });

            modelBuilder.Entity("Judgment", b =>
                {
                    b.Property<int>("ID_Judgment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Judgmentn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_Judgment");

                    b.ToTable("Judgment");
                });

            modelBuilder.Entity("LGL_Authorization", b =>
                {
                    b.Property<int>("authorization_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Client_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("authorization_character")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("authorization_code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("authorization_disable")
                        .HasColumnType("bit");

                    b.Property<string>("authorization_img")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("authorization_kinds_id")
                        .HasColumnType("int");

                    b.Property<string>("authorization_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("authorization_source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("authorization_year")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("creation_user")
                        .HasColumnType("int");

                    b.Property<int>("last_update_user")
                        .HasColumnType("int");

                    b.HasKey("authorization_id");

                    b.HasIndex("authorization_kinds_id");

                    b.ToTable("LGL_Authorizations");
                });

            modelBuilder.Entity("LGL_Authorization_kinds", b =>
                {
                    b.Property<int>("authorization_kinds_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("authorization_kinds_disable")
                        .HasColumnType("bit");

                    b.Property<string>("authorization_kinds_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("creation_user")
                        .HasColumnType("int");

                    b.Property<int>("last_update_user")
                        .HasColumnType("int");

                    b.HasKey("authorization_kinds_id");

                    b.ToTable("LGL_Authorization_kindss");
                });

            modelBuilder.Entity("LGL_Cause", b =>
                {
                    b.Property<int>("cause_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("cause_disable")
                        .HasColumnType("bit");

                    b.Property<string>("cause_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("creation_user")
                        .HasColumnType("int");

                    b.Property<int>("last_update_user")
                        .HasColumnType("int");

                    b.HasKey("cause_id");

                    b.ToTable("LGL_Causes");
                });

            modelBuilder.Entity("LGL_Client_types", b =>
                {
                    b.Property<int>("client_type_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("client_type_disable")
                        .HasColumnType("bit");

                    b.Property<string>("client_type_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("creation_user")
                        .HasColumnType("int");

                    b.Property<int>("last_update_user")
                        .HasColumnType("int");

                    b.HasKey("client_type_id");

                    b.ToTable("LGL_Client_typess");
                });

            modelBuilder.Entity("LGL_Clients", b =>
                {
                    b.Property<int>("client_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("associate_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("client_address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("client_disable")
                        .HasColumnType("bit");

                    b.Property<string>("client_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("client_type_id")
                        .HasColumnType("int");

                    b.Property<int>("creation_user")
                        .HasColumnType("int");

                    b.Property<int>("last_update_user")
                        .HasColumnType("int");

                    b.Property<string>("nationid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ph1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ph2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("client_id");

                    b.HasIndex("client_type_id");

                    b.ToTable("LGL_Clientss");
                });

            modelBuilder.Entity("LGL_Contracting", b =>
                {
                    b.Property<int>("contracting_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Conimg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contract_transfer_clause")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ID_Contracttybe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ID_TypeAnnualIncrease")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Insurance_value")
                        .HasColumnType("real");

                    b.Property<DateTime>("Licensedate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ManagingDirector")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Montvalue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Montvalue1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Montvalue2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Montvalue3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Montvalue4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Montvalue5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Montvalue6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Montvalue7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Montvalue8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Startfrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Startfrom1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Startfrom2")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Startfrom3")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Startfrom4")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Startfrom5")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Startfrom6")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Startfrom7")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Startfrom8")
                        .HasColumnType("datetime2");

                    b.Property<string>("Year")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Year1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Year2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Year3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Year4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Year5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Year6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Year7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Year8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("branchesID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("cause_disable")
                        .HasColumnType("bit");

                    b.Property<string>("contract_notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("contract_value")
                        .HasColumnType("real");

                    b.Property<int>("creation_user")
                        .HasColumnType("int");

                    b.Property<DateTime>("end_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("increase_perc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("last_update_user")
                        .HasColumnType("int");

                    b.Property<string>("leavetime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("licensenumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("medicalarea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("owner_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("start_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("tenant_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("writen_date")
                        .HasColumnType("datetime2");

                    b.Property<float>("yearsnumber")
                        .HasColumnType("real");

                    b.HasKey("contracting_id");

                    b.ToTable("LGL_Contractings");
                });

            modelBuilder.Entity("LGL_Court", b =>
                {
                    b.Property<int>("court_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("court_disable")
                        .HasColumnType("bit");

                    b.Property<string>("court_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("creation_user")
                        .HasColumnType("int");

                    b.Property<int>("last_update_user")
                        .HasColumnType("int");

                    b.HasKey("court_id");

                    b.ToTable("LGL_Courts");
                });

            modelBuilder.Entity("LGL_Lawsuit", b =>
                {
                    b.Property<int>("lawsuit_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ID_Judgment")
                        .HasColumnType("int");

                    b.Property<int?>("LGL_Client_types")
                        .HasColumnType("int");

                    b.Property<string>("PronouncingJudgment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("associate_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("cause_id")
                        .HasColumnType("int");

                    b.Property<string>("cause_year")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("client_id")
                        .HasColumnType("int");

                    b.Property<int>("client_type_id")
                        .HasColumnType("int");

                    b.Property<int>("court_id")
                        .HasColumnType("int");

                    b.Property<int>("creation_user")
                        .HasColumnType("int");

                    b.Property<int>("last_update_user")
                        .HasColumnType("int");

                    b.Property<int>("lawsuit_Status_id")
                        .HasColumnType("int");

                    b.Property<string>("lawsuit_circle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lawsuit_degree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lawsuit_description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lawsuit_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lawsuitfile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("litigant_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("sitting_date_first")
                        .HasColumnType("datetime2");

                    b.Property<string>("trapping_number")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("lawsuit_id");

                    b.HasIndex("ID_Judgment");

                    b.HasIndex("LGL_Client_types");

                    b.HasIndex("cause_id");

                    b.HasIndex("client_id");

                    b.HasIndex("court_id");

                    b.HasIndex("lawsuit_Status_id");

                    b.HasIndex("litigant_id");

                    b.ToTable("LGL_Lawsuits");
                });

            modelBuilder.Entity("LGL_Lawsuit_Status", b =>
                {
                    b.Property<int>("lawsuit_Status_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("creation_user")
                        .HasColumnType("int");

                    b.Property<int>("last_update_user")
                        .HasColumnType("int");

                    b.Property<bool>("lawsuit_Status_disable")
                        .HasColumnType("bit");

                    b.Property<string>("lawsuit_Status_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("lawsuit_Status_id");

                    b.ToTable("LGL_Lawsuit_Statuss");
                });

            modelBuilder.Entity("LGL_Litigant", b =>
                {
                    b.Property<int>("litigant_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("creation_user")
                        .HasColumnType("int");

                    b.Property<int>("last_update_user")
                        .HasColumnType("int");

                    b.Property<bool>("litigant_disable")
                        .HasColumnType("bit");

                    b.Property<string>("litigant_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("litigant_id");

                    b.ToTable("LGL_Litigants");
                });

            modelBuilder.Entity("LGL_Sessions", b =>
                {
                    b.Property<int>("sessions_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("area")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("court_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("creation_user")
                        .HasColumnType("int");

                    b.Property<string>("decision")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("delay_reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("finished")
                        .HasColumnType("bit");

                    b.Property<int>("last_update_user")
                        .HasColumnType("int");

                    b.Property<int>("lawsuit_id")
                        .HasColumnType("int");

                    b.Property<string>("litigant_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("requests")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rollno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("session_date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("session_next_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("year")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("sessions_id");

                    b.HasIndex("lawsuit_id");

                    b.ToTable("LGL_Sessionss");
                });

            modelBuilder.Entity("LGL_lawsuit_files", b =>
                {
                    b.Property<int>("lawsuit_files_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("creation_user")
                        .HasColumnType("int");

                    b.Property<int>("last_update_user")
                        .HasColumnType("int");

                    b.Property<string>("lawsuit_files_img")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("lawsuit_id")
                        .HasColumnType("int");

                    b.HasKey("lawsuit_files_id");

                    b.HasIndex("lawsuit_id");

                    b.ToTable("LGL_lawsuit_filess");
                });

            modelBuilder.Entity("Permission_group", b =>
                {
                    b.Property<int>("permission_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("permission_name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("permission_id");

                    b.ToTable("Permission_groups");
                });

            modelBuilder.Entity("Permission_pages", b =>
                {
                    b.Property<int>("page_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("page_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("permission_id")
                        .HasColumnType("int");

                    b.HasKey("page_id");

                    b.HasIndex("permission_id");

                    b.ToTable("Permission_pagess");
                });

            modelBuilder.Entity("Users", b =>
                {
                    b.Property<int>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("date_add")
                        .HasColumnType("datetime2");

                    b.Property<int>("permission_id")
                        .HasColumnType("int");

                    b.Property<string>("useremail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userpassword")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("userId");

                    b.HasIndex("permission_id");

                    b.ToTable("Userss");
                });

            modelBuilder.Entity("investigation", b =>
                {
                    b.Property<int>("ID_investigation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Decisionafterinvst")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Employeeid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Employeename")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ID_Department")
                        .HasColumnType("int");

                    b.Property<int>("ID_jop")
                        .HasColumnType("int");

                    b.Property<string>("Idinvist")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Investigator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Invimage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Invstdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Invstnotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationalid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NatureComplaint")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Noofcomplain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("creation_user")
                        .HasColumnType("int");

                    b.Property<int>("last_update_user")
                        .HasColumnType("int");

                    b.HasKey("ID_investigation");

                    b.HasIndex("ID_Department");

                    b.HasIndex("ID_jop");

                    b.ToTable("investigation");
                });

            modelBuilder.Entity("ADAF_District_license", b =>
                {
                    b.HasOne("ADAF_Branches", "ADAF_Branches")
                        .WithMany()
                        .HasForeignKey("branch_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ADAF_District_license_types", "aDAF_District_License_Types")
                        .WithMany()
                        .HasForeignKey("district_license_types_id");

                    b.Navigation("ADAF_Branches");

                    b.Navigation("aDAF_District_License_Types");
                });

            modelBuilder.Entity("Branchleave", b =>
                {
                    b.HasOne("ADAF_Branches", "ADAF_Branches")
                        .WithMany()
                        .HasForeignKey("branch_idا");

                    b.Navigation("ADAF_Branches");
                });

            modelBuilder.Entity("Central", b =>
                {
                    b.HasOne("ADAF_Branches", "aDAF_Branches")
                        .WithMany()
                        .HasForeignKey("branch_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("aDAF_Branches");
                });

            modelBuilder.Entity("LGL_Authorization", b =>
                {
                    b.HasOne("LGL_Authorization_kinds", "LGL_Authorization_kinds")
                        .WithMany()
                        .HasForeignKey("authorization_kinds_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LGL_Authorization_kinds");
                });

            modelBuilder.Entity("LGL_Clients", b =>
                {
                    b.HasOne("LGL_Client_types", "LGL_Client_types")
                        .WithMany()
                        .HasForeignKey("client_type_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LGL_Client_types");
                });

            modelBuilder.Entity("LGL_Lawsuit", b =>
                {
                    b.HasOne("Judgment", "judgment")
                        .WithMany()
                        .HasForeignKey("ID_Judgment")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LGL_Client_types", "LGL_Client_Types")
                        .WithMany()
                        .HasForeignKey("LGL_Client_types");

                    b.HasOne("LGL_Cause", "LGL_Cause")
                        .WithMany()
                        .HasForeignKey("cause_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LGL_Clients", "LGL_Clients")
                        .WithMany()
                        .HasForeignKey("client_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LGL_Court", "lGL_Court")
                        .WithMany()
                        .HasForeignKey("court_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LGL_Lawsuit_Status", "lGL_Lawsuit_Status")
                        .WithMany()
                        .HasForeignKey("lawsuit_Status_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LGL_Litigant", "lGL_Litigant")
                        .WithMany()
                        .HasForeignKey("litigant_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("judgment");

                    b.Navigation("LGL_Cause");

                    b.Navigation("LGL_Client_Types");

                    b.Navigation("LGL_Clients");

                    b.Navigation("lGL_Court");

                    b.Navigation("lGL_Lawsuit_Status");

                    b.Navigation("lGL_Litigant");
                });

            modelBuilder.Entity("LGL_Sessions", b =>
                {
                    b.HasOne("LGL_Lawsuit", "LGL_Lawsuit")
                        .WithMany()
                        .HasForeignKey("lawsuit_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LGL_Lawsuit");
                });

            modelBuilder.Entity("LGL_lawsuit_files", b =>
                {
                    b.HasOne("LGL_Lawsuit", "LGL_Lawsuit")
                        .WithMany()
                        .HasForeignKey("lawsuit_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LGL_Lawsuit");
                });

            modelBuilder.Entity("Permission_pages", b =>
                {
                    b.HasOne("Permission_group", "Permission_group")
                        .WithMany()
                        .HasForeignKey("permission_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission_group");
                });

            modelBuilder.Entity("Users", b =>
                {
                    b.HasOne("Permission_group", "Permission_group")
                        .WithMany()
                        .HasForeignKey("permission_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission_group");
                });

            modelBuilder.Entity("investigation", b =>
                {
                    b.HasOne("Department", "department")
                        .WithMany()
                        .HasForeignKey("ID_Department")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jop", "jop")
                        .WithMany()
                        .HasForeignKey("ID_jop")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("department");

                    b.Navigation("jop");
                });
#pragma warning restore 612, 618
        }
    }
}
